=== backend/Dockerfile ===
# File: Dockerfile
# Purpose: Docker configuration for building and running the Django application.
# Location: (project root)
#
# This Dockerfile sets up a Python 3.10 environment, installs dependencies,
# and runs the Django application using the development server on port 8000.
# For production, consider using a WSGI server like gunicorn.

FROM python:3.10-slim

# Set the working directory inside the container
WORKDIR /app

# Copy dependency list
COPY requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy all project files into the container
COPY . .

# Ensure stdout/stderr are unbuffered (useful for logging)
ENV PYTHONUNBUFFERED=1

# Expose Django's default port
EXPOSE 8000

# Start the Django development server (not recommended for production)
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]

=== backend/__init__.py ===


=== backend/manage.py ===
#!/usr/bin/env python
"""
File: backend/manage.py
Purpose: Django's command-line utility for administrative tasks.

This script allows you to interact with this Django project in various ways,
such as running the development server, applying migrations, or creating superusers.

Usage:
    python manage.py <command> [options]
"""

import os
import sys

def main():
    """
    Run administrative tasks for the Django project.

    This function sets the default settings module and then
    executes the command line utility provided by Django.
    """
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)

if __name__ == '__main__':
    main()

=== backend/requirements.txt ===
django 
djangorestframework 
psycopg2-binary 
djangorestframework-simplejwt 
django-cors-headers
python-dotenv

